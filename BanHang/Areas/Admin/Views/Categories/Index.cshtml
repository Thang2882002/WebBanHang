@model IEnumerable<BanHang.Models.Category>

@{
    ViewBag.Title = "Index";
}
<style>
    .custom-table {
        width: 100%;
        border-collapse: collapse;
    }

        .custom-table th,
        .custom-table td {
            padding: 10px;
            text-align: left;
        }

        .custom-table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        .custom-table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .custom-table tbody tr:hover {
            background-color: #f0f0f0;
        }
    /* Container for notifications */
    #alert-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    /* Styles for notification */
    .alert {
        position: relative;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 0.5rem;
        background-color: #f0f0f0;
        color: #333;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
        transition: transform 0.3s ease, opacity 0.3s ease;
        max-width: 300px;
    }

    /* Notification appearance animation */
    .alert-show {
        opacity: 1;
        transform: translateY(0);
    }

    /* Notification hiding animation */
    .alert-hide {
        opacity: 0;
        transform: translateY(20px);
    }

    /* Success notification */
    .alert-success {
        background-color: #6fcf97;
        color: #fff;
    }

    /* Error notification */
    .alert-error {
        background-color: #eb5757;
        color: #fff;
    }

    /* Info notification */
    .alert-info {
        background-color: #2d9cdb;
        color: #fff;
    }

    /* Warning notification */
    .alert-warning {
        background-color: #f2c94c;
        color: #333;
    }

</style>
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/Categories" class="nav-link">Quản lý danh mục</a>
        </li>
    </ul>
}
<div class="card">
    <div class="card-header" style="text-align:center">
        <h3 class="card-title" style="font-size:30px">Danh sách Danh Mục</h3>
        <div class="card-tools">
            <a href="@Url.Action("Create")" class="btn btn-primary"><i class="fas fa-plus"></i> Thêm mới</a>
            <!-- Added the "fas fa-plus" icon for "Thêm mới" -->
        </div>
    </div>
</div>


@if (TempData["Xoathanhcong"] != null && (bool)TempData["Xoathanhcong"])
{
    <div id="alert-container"></div>
    <script>
        function showNotification(message) {
            var alertElement = document.createElement('div');
            alertElement.classList.add('alert', 'alert-success');
            alertElement.textContent = message;
            document.getElementById('alert-container').appendChild(alertElement);

            setTimeout(function () {
                alertElement.classList.add('alert-hide');
                setTimeout(function () {
                    alertElement.remove();
                }, 500);
            }, 5000);
        }

        showNotification('Xóa thành công!');
    </script>
}
@if (TempData["Suathanhcong"] != null && (bool)TempData["Suathanhcong"])
{
    <div id="alert-container"></div>
    <script>
        function showNotification(message) {
            var alertElement = document.createElement('div');
            alertElement.classList.add('alert', 'alert-success');
            alertElement.textContent = message;
            document.getElementById('alert-container').appendChild(alertElement);

            setTimeout(function () {
                alertElement.classList.add('alert-hide');
                setTimeout(function () {
                    alertElement.remove();
                }, 500);
            }, 5000);
        }

        showNotification('Sửa thành công!');
    </script>
}
@if (TempData["Themthanhcong"] != null && (bool)TempData["Themthanhcong"])
{
    <div id="alert-container"></div>
    <script>
        function showNotification(message) {
            var alertElement = document.createElement('div');
            alertElement.classList.add('alert', 'alert-success');
            alertElement.textContent = message;
            document.getElementById('alert-container').appendChild(alertElement);

            setTimeout(function () {
                alertElement.classList.add('alert-hide');
                setTimeout(function () {
                    alertElement.remove();
                }, 500);
            }, 5000);
        }

        showNotification('Thêm thành công!');
    </script>
}

    <table class="table table-bordered table-hover custom-table text-center">
        <colgroup>
            <col style="width: 10%">
            <col style="width: 10%">
            @*<col style="width: 10%">*@
            <col style="width: 10%">
            @*<col style="width: 10%">*@
            <col style="width: 10%">
            <col style="width: 10%">
            <col style="width: 10%">
            <col style="width: 20%">
        </colgroup>
        <thead class="thead-light">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                @*<th>@Html.DisplayNameFor(model => model.CreatedBy)</th>*@
                <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
                @*<th>@Html.DisplayNameFor(model => model.ModifiedBy)</th>*@
                <th>@Html.DisplayNameFor(model => model.ModifiedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Alias)</th>
                <th>@Html.DisplayNameFor(model => model.Position)</th>
                <th>Chức năng</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    @*<td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>*@
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    @*<td>@Html.DisplayFor(modelItem => item.ModifiedBy)</td>*@
                    <td>@Html.DisplayFor(modelItem => item.ModifiedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Alias)</td>
                    <td>@Html.DisplayFor(modelItem => item.Position)</td>
                    <td>
                        <a href="@Url.Action("Edit", new { id = item.CategoryID })" class="btn btn-primary"><i class="fas fa-edit"></i></a>
                        <a href="@Url.Action("Details", new { id = item.CategoryID })" class="btn btn-info"><i class="fas fa-info-circle"></i></a>
                        <a href="@Url.Action("Delete", new { id = item.CategoryID })" class="btn btn-danger" onclick="return confirm('Bạn có muốn xóa danh mục này không?');"><i class="fas fa-trash-alt"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

