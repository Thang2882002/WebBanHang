@model BanHang.Models.ProductImage

@{
    ViewBag.Title = "Edit";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/news" class="nav-link">Hình Ảnh Sản Phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Sửa Hình Ảnh</a>
        </li>
    </ul>
}
<div class="card">
    <div class="card-header" style="text-align:center">
        <h3 class="card-title" style="font-size:30px">Sửa Hình Ảnh</h3>

    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductImageID)

    <div class="form-group">
        @Html.LabelFor(model => model.IDProduct, "IDProduct", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IDProduct", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDProduct, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="exampleInputFile">Ảnh đại diện</label>
        <div class="input-group">
            <div class="custom-file">
                @Html.TextBoxFor(x => x.Image, new { @id = "txtImage", @class = "form-control" })
            </div>
            <div class="input-group-append">
                <input type="button" value="Tải ảnh" onclick="BrowseServer('txtImage');" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsDefault, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(model => model.IsDefault, new List<SelectListItem>{
                    new SelectListItem { Text="Hiển Thị", Value="true" },
                    new SelectListItem { Text="Không Hiển Thị", Value="false" }
                }, "Chọn trạng thái", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsDefault, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />|
            @Html.ActionLink("Quay lại danh sách", "Index", null, new { @class = "btn btn-info" })
        </div>
    </div>
</div>
}

@section  scripts{
    <script>
        $(document).ready(function () {
            CKEDITOR.replace('txtDetail', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });
        function BrowseServer(field) {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                document.getElementById(field).value = fileUrl;
            };
            finder.popup();
        }

    </script>
}